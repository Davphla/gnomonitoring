services:
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    volumes:
      - ./otel/otel-config.yaml:/etc/otel/config.yaml
    command: [ "--config=/etc/otel/config.yaml" ]
    ports:
      - "127.0.0.1:9464:9464" # for Prometheus
      - "127.0.0.1:4317:4317" # for Gnoland
    networks:
      - monitoring

  block-exporter:
    image: block_exporter
    container_name: block-exporter
    volumes:
      - ./block_exporter/block_exporter.go:/root/block_exporter.go
      - ./block_exporter/config.yaml:/root/config.yaml
      - ./block_exporter/go.mod:/root/go.mod
      - ./block_exporter/sum.go:/root/sum.go
    ports:
      - "127.0.0.1:8888:8888" # Port pour l’export des métriques
    networks:
      - monitoring
    command: [ "go", "run", "block_exporter.go" ]

  validator1:
    image: gnoland-image:latest
    container_name: validator1
    volumes:
      - ./Validator/initvalidator.sh:/gnoroot/initvalidator.sh
      - ./Validator/config.toml:/gnoroot/config.toml
     # - ./Validator/genesis.json:/gnoroot/genesis.json
      #- ./Validator/secrets/:/gnoroot/gnoland-data/secrets/
    ports:
      - "127.0.0.1:26656:26656" # P2P
      - "127.0.0.1:26657:26657" # RPC
      - "127.0.0.1:26660:26660" # Metrics (si activé dans Gnoland)
    entrypoint: [ "sh", "/gnoroot/initvalidator.sh" ]
    networks:
      - monitoring

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    ports:
      - "127.0.0.1:9191:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - monitoring
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M

networks:
  monitoring:
    driver: bridge
